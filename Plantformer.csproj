<Project Sdk="Godot.NET.Sdk/4.4.1">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RootNamespace>Plantformer</RootNamespace>
    <!-- Catch compiler-mismatch issues with the Introspection generator as early as possible -->
    <WarningsAsErrors>CS9057</WarningsAsErrors>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- Required for some nuget packages to work -->
    <!-- godotengine/godot/issues/42271#issuecomment-751423827 -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- To show generated files -->
    <!-- <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles> -->
    <!--
      <CompilerGeneratedFilesOutputPath>.generated</CompilerGeneratedFilesOutputPath>
    -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Title>Plantformer</Title>
    <Version>1.0.0</Version>
    <Description>Plantformer</Description>
    <Copyright>Â© 2024 Dan M</Copyright>
    <Authors>Dan M</Authors>
    <Company>Dan M</Company>

    <SkipTests Condition="'$(SKIP_TESTS)' != ''">true</SkipTests>
    <RunTests>false</RunTests>
  </PropertyGroup>

  <PropertyGroup Condition="&#xA;        ('$(Configuration)' == 'Debug' or '$(Configuration)' == 'ExportDebug')&#xA;        and '$(SkipTests)' != 'true' ">
    <RunTests>true</RunTests>
    <DefineConstants>$(DefineConstants);RUN_TESTS</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition="'$(RunTests)' == 'true'">
    <!-- Test dependencies go here! -->
    <!-- Dependencies added here will not be included in release builds. -->
    <PackageReference Include="Chickensoft.GoDotTest" Version="1.6.16" />
    <!-- Used to drive test scenes when testing visual code -->
    <PackageReference Include="Chickensoft.GodotTestDriver" Version="3.1.12" />
    <!-- Bring your own assertion library for tests! -->
    <!-- We're using Shouldly for this example, but you can use anything. -->
    <PackageReference Include="Shouldly" Version="4.3.0" />
    <!-- LightMock is a mocking library that works without reflection. -->
    <PackageReference Include="LightMock.Generator" Version="1.2.2" />
    <!-- LightMoq is a Chickensoft package which makes it more like Moq. -->
    <PackageReference Include="LightMoq" Version="0.1.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Production dependencies go here! -->
    <PackageReference Include="Chickensoft.GameTools" Version="2.0.19" />
    <PackageReference Include="ExhaustiveMatching.Analyzer" Version="0.5.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(RunTests)' != 'true'">
    <Compile Remove="test/**/*.cs" />
    <None Remove="test/**/*" />
    <EmbeddedResource Remove="test/**/*" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="scenes\" />
  </ItemGroup>
</Project>
